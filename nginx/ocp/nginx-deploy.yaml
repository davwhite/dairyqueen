---
kind: Deployment
apiVersion: apps/v1
metadata:
  name: nginx-deployment
  annotations:
    alpha.image.policy.openshift.io/resolve-names: '*'
    app.openshift.io/route-disabled: 'false'
    deployment.kubernetes.io/revision: '1'
  namespace: dq
  labels:
    app: nginx
    app.kubernetes.io/component: nginx
    app.kubernetes.io/instance: nginx
    app.kubernetes.io/name: nginx
    app.kubernetes.io/part-of: nginx-app
    app.openshift.io/runtime-namespace: nginx
spec:
  restartPolicy: Never
  replicas: 1
  selector:
    matchLabels:
      app: nginx
  template:
    metadata:
      creationTimestamp: null
      labels:
        app: nginx
        deploymentconfig: nginx
    spec:
      securityContext:
        runAsUser: 1000
        runAsGroup: 3000
        fsGroup: 2000    
      containers:
        - name: nginx
          image: nexus.davenet.local:8080/dq/nginx:latest
          imagePullPolicy: Always
          ports:
            - containerPort: 8080
              protocol: TCP
          volumeMounts: 
            - name: nginx-config
              mountPath: "/etc/nginx/"
            - name: nginx-config-default
              mountPath: "/etc/nginx/conf.d/"
            - name: cache-volume
              mountPath: /var/cache/nginx/
            - name: run-volume
              mountPath: /var/run
            - name: log-volume
              mountPath: /var/log/nginx/
          resources: {}
      volumes: 
        - name: nginx-config
          configMap:
            name: nginx-config
        - name: nginx-config-default
          configMap:
            name: nginx-config-default
        - name: cache-volume
          emptyDir: {}            
        - name: run-volume
          emptyDir: {}            
        - name: log-volume
          emptyDir: {}            
      #   - name: nginx-content
      # #     persistentVolumeClaim:
      # #       claimName: pvc-nginx-content
      restartPolicy: Always
      terminationGracePeriodSeconds: 30
      dnsPolicy: ClusterFirst
      securityContext: {}
      schedulerName: default-scheduler

---
apiVersion: v1
kind: Service
metadata:
  name: nginx-service
spec:
  selector:
    app: nginx
  ports:
    - protocol: TCP
      name: http
      port: 8080
#   readinessProbe:
#     tcpSocket:
#       port: 1880
#     initialDelaySeconds: 5
#     periodSeconds: 10